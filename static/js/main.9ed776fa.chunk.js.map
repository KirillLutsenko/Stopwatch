{"version":3,"sources":["Types.jsx","components/Display/Display.jsx","components/ControlPanel/Buttons/StartButton.jsx","components/ControlPanel/Buttons/StopButton.jsx","components/ControlPanel/Buttons/ResetButton.jsx","components/ControlPanel/Buttons/WaitButton.jsx","components/ControlPanel/ControlPanel.jsx","App.js","index.js"],"names":["PropTypes","func","isRequired","shape","hours","number","minutes","seconds","string","Display","time","className","StartButton","startTimer","type","onClick","StopButton","stopTimer","ResetButton","resetTimer","WaitButton","wait","ControlPanel","status","App","useState","setTime","interv","setInterv","setStatus","updateHours","updateMinutes","updateSeconds","timeStamp","runTimer","setInterval","clearInterval","clickTime","Date","getTime","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ed776fa.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const StartButtonTypes = {\n  startTimer: PropTypes.func.isRequired,\n};\n\nexport const StopButtonTypes = {\n  stopTimer: PropTypes.func.isRequired,\n};\n\nexport const ResetButtonTypes = {\n  resetTimer: PropTypes.func.isRequired,\n};\n\nexport const WaitButtonTypes = {\n  wait: PropTypes.func.isRequired,\n};\n\nexport const DisplayTypes = PropTypes.shape({\n  hours: PropTypes.number.isRequired,\n  minutes: PropTypes.number.isRequired,\n  seconds: PropTypes.number.isRequired,\n}).isRequired;\n\nexport const ControlPanelTypes = {\n  startTimer: PropTypes.func.isRequired,\n  stopTimer: PropTypes.func.isRequired,\n  resetTimer: PropTypes.func.isRequired,\n  wait: PropTypes.func.isRequired,\n  status: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { DisplayTypes } from '../../Types';\n\nexport const Display = ({ time }) => (\n  <div className=\"stopwatch__display\">\n    <span>\n      {(time.hours >= 10) ? time.hours : `0${time.hours}`}\n    </span>\n\n    &nbsp;:&nbsp;\n\n    <span>\n      {(time.minutes >= 10) ? time.minutes : `0${time.minutes}`}\n    </span>\n\n    &nbsp;:&nbsp;\n\n    <span>\n      {(time.seconds >= 10) ? time.seconds : `0${time.seconds}`}\n    </span>\n  </div>\n);\n\nDisplay.propTypes = DisplayTypes;\n","import React from 'react';\nimport { StartButtonTypes } from '../../../Types';\n\nexport const StartButton = ({ startTimer }) => (\n  <button\n    type=\"button\"\n    className=\"control-panel__button start-button\"\n    onClick={startTimer}\n  >\n    Start\n  </button>\n);\n\nStartButton.propTypes = StartButtonTypes;\n","import React from 'react';\nimport { StopButtonTypes } from '../../../Types';\n\nexport const StopButton = ({ stopTimer }) => (\n  <button\n    type=\"button\"\n    className=\"control-panel__button start-button\"\n    onClick={stopTimer}\n  >\n    Stop\n  </button>\n);\n\nStopButton.propTypes = StopButtonTypes;\n","import React from 'react';\nimport { ResetButtonTypes } from '../../../Types';\n\nexport const ResetButton = ({ resetTimer }) => (\n  <button\n    type=\"button\"\n    className=\"control-panel__button start-button\"\n    onClick={resetTimer}\n  >\n    Reset\n  </button>\n);\n\nResetButton.propTypes = ResetButtonTypes;\n","import React from 'react';\nimport { WaitButtonTypes } from '../../../Types';\n\nexport const WaitButton = ({ wait }) => (\n  <button\n    type=\"button\"\n    className=\"control-panel__button start-button\"\n    onClick={wait}\n  >\n    Wait\n  </button>\n);\n\nWaitButton.propTypes = WaitButtonTypes;\n","import React from 'react';\nimport { StartButton } from './Buttons/StartButton';\nimport { StopButton } from './Buttons/StopButton';\nimport { ResetButton } from './Buttons/ResetButton';\nimport { WaitButton } from './Buttons/WaitButton';\nimport './ControlPanel.scss';\nimport { ControlPanelTypes } from '../../Types';\n\nexport const ControlPanel = ({\n  startTimer,\n  stopTimer,\n  resetTimer,\n  wait,\n  status,\n}) => (\n  <div className=\"stopwatch__control-panel control-panel\">\n    {status === 'stop'\n      ? (<StartButton startTimer={startTimer} />)\n      : ('')\n    }\n\n    {status === 'run' ? (\n      <div>\n        <WaitButton wait={wait} />\n        <StopButton stopTimer={stopTimer} />\n        <ResetButton resetTimer={resetTimer} />\n      </div>\n    ) : ('')}\n\n    {status === 'wait' ? (\n      <div>\n        <StartButton startTimer={startTimer} />\n        <StopButton stopTimer={stopTimer} />\n      </div>\n    ) : ('')}\n  </div>\n);\n\nControlPanel.propTypes = ControlPanelTypes;\n","import React, { useState } from 'react';\nimport { Display } from './components/Display/Display';\nimport { ControlPanel } from './components/ControlPanel/ControlPanel';\nimport './App.scss';\n\nfunction App() {\n  const [time, setTime] = useState({\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  });\n  const [interv, setInterv] = useState();\n  const [status, setStatus] = useState('stop');\n\n  let updateHours = time.hours;\n  let updateMinutes = time.minutes;\n  let updateSeconds = time.seconds;\n  let timeStamp = 0;\n\n  const runTimer = () => {\n    if (updateMinutes === 60) {\n      updateHours += 1;\n      updateMinutes = 0;\n    }\n\n    if (updateSeconds === 60) {\n      updateMinutes += 1;\n      updateSeconds = 0;\n    }\n\n    updateSeconds += 1;\n\n    return setTime({\n      hours: updateHours,\n      minutes: updateMinutes,\n      seconds: updateSeconds,\n    });\n  };\n\n  const startTimer = () => {\n    runTimer();\n    setStatus('run');\n    setInterv(setInterval(runTimer, 1000));\n  };\n\n  const stopTimer = () => {\n    clearInterval(interv);\n    setStatus('stop');\n    setTime({\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n    });\n  };\n\n  const resetTimer = () => {\n    clearInterval(interv);\n    setTime({\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n    });\n\n    updateHours = 0;\n    updateMinutes = 0;\n    updateSeconds = 0;\n\n    setInterv(setInterval(runTimer, 1000));\n  };\n\n  const wait = () => {\n    const clickTime = new Date().getTime();\n\n    if (clickTime - timeStamp < 300) {\n      clearInterval(interv);\n      setStatus('wait');\n    }\n\n    timeStamp = clickTime;\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app____stopwatch-holder stopwatch-holder\">\n        <div className=\"stopwatch-holder__stopwatch stopwatch\">\n          <Display time={time} />\n          <ControlPanel\n            startTimer={startTimer}\n            stopTimer={stopTimer}\n            resetTimer={resetTimer}\n            wait={wait}\n            status={status}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}